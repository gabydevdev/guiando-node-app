@mixin center-block() {
	display: block;
	margin-right: auto;
	margin-left: auto;
}

@mixin square($size) {
	@include size($size, $size);
}

@mixin box-shadow($shadow) {
	box-shadow: $shadow;
}

@mixin animation($properties) {
	animation: $properties;
}

@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {
	column-count: $column-count;
	column-gap: $column-gap;
}

@mixin hyphens($mode: auto) {
	hyphens: $mode;
	word-wrap: break-word;
}

@mixin gradient-horizontal($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
	background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
	background-repeat: repeat-x;
}

@mixin gradient-vertical($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
	background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
	background-repeat: repeat-x;
}

@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
	background-image: linear-gradient($deg, $start-color, $end-color);
	background-repeat: repeat-x;
}

@mixin gradient-horizontal-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
	background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
	background-repeat: no-repeat;
}

@mixin gradient-vertical-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
	background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
	background-repeat: no-repeat;
}

@mixin gradient-radial($inner-color: #555, $outer-color: #333) {
	background-image: radial-gradient(circle, $inner-color, $outer-color);
	background-repeat: no-repeat;
}

@mixin gradient-striped($color: rgba(255, 255, 255, 0.15), $angle: 45deg) {
	background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

@function hsv-to-hsl($h, $s: 0, $v: 0) {
	@if type-of($h) == "list" {
		$v: list.nth($h, 3);
		$s: list.nth($h, 2);
		$h: list.nth($h, 1);
	}

	@if unit($h) == "deg" {
		$h: 3.1415 * 2 * ($h / 360deg);
	}

	@if unit($s) == "%" {
		$s: 0 + ($s / 100%);
	}

	@if unit($v) == "%" {
		$v: 0 + ($v / 100%);
	}

	$ss: $s * $v;
	$ll: (2 - $s) * $v;

	@if $ll <= 1 and $ll != 0 {
		$ss: $ss / $ll;
	} @else if ($ll == 2) {
		$ss: 0;
	} @else {
		$ss: $ss / (2 - $ll);
	}

	$ll: $ll / 2;

	@return 360deg * $h / (3.1415 * 2), percentage(max(0, min(1, $ss))), percentage(max(0, min(1, $ll)));
}

@function hsl-to-hsv($h, $ss: 0, $ll: 0) {
	@if type-of($h) == "list" {
		$ll: list.nth($h, 3);
		$ss: list.nth($h, 2);
		$h: list.nth($h, 1);
	} @else if type-of($h) == "color" {
		$ll: color.lightness($h);
		$ss: color.saturation($h);
		$h: color.hue($h);
	}

	@if unit($h) == "deg" {
		$h: 3.1415 * 2 * ($h / 360deg);
	}

	@if unit($ss) == "%" {
		$ss: 0 + ($ss / 100%);
	}

	@if unit($ll) == "%" {
		$ll: 0 + ($ll / 100%);
	}

	$ll: $ll * 2;

	@if $ll <= 1 {
		$ss: $ss * $ll;
	} @else {
		$ss: $ss * (2 - $ll);
	}

	$v: ($ll + $ss) / 2;
	$s: if ($ll + $ss == 0, 0, (2 * $ss) / ($ll + $ss));

	@return 360deg * $h / (3.1415 * 2), percentage(max(0, min(1, $s))), percentage(max(0, min(1, $v)));
}

@function color-to-hsv($color) {
	@return hsl-to-hsv($color);
}

@function hsv-to-color($h, $s: 0, $v: 0) {
	$hsl: hsv-to-hsl($h, $s, $v);

	@return hsl(list.nth($hsl, 1), list.nth($hsl, 2), list.nth($hsl, 3));
}

@function luma($c) {
	$local-red: color.red(rgba($c, 1));
	$local-green: color.green(rgba($c, 1));
	$local-blue: color.blue(rgba($c, 1));

	@return calc((0.2126 * $local-red + 0.7152 * $local-green + 0.0722 * $local-blue) / 255);
}

@function make-shade($color, $mix-percentage, $saturation-shift, $hue-shift, $level) {
	$divider: 1;
	$base: #000;
	$mix-percentage: $mix-percentage * 1%;

	@if ($level == 1 or $level == -1) {
		$divider: 2;
	}

	@if ($level < 0) {
		$base: #fff;
	}

	$color-mix: color.mix($color, $base, $mix-percentage);
	$color-saturate: $color-mix;
	$color-hue: $hue-shift;

	@if (color.saturation($color-mix) > 5) {
		$color-saturate: saturate($color-mix, calc($saturation-shift / $divider));
	}

	@if ($level < 0) {
		@if (luma(adjust-hue($color, $hue-shift)) > luma($color)) {
			$color-hue: calc($hue-shift / $divider);
		} @else {
			$color-hue: calc(($hue-shift / $divider) * -1);
		}
	} @else if ($level > 0) {
		@if (luma(adjust-hue($color, $hue-shift)) > luma($color)) {
			$color-hue: calc(($hue-shift / $divider) * -1);
		} @else {
			$color-hue: calc($hue-shift / $divider);
		}
	}

	@return adjust-hue($color-saturate, $color-hue);
}

@function text-contrast($background-color) {
	$color-brightness: math.round(calc(((color.red($background-color) * 299) + (color.green($background-color) * 587) + (color.blue($background-color) * 114)) / 1000));
	$light-color: math.round(calc(((color.red(#fff) * 299) + (color.green(#fff) * 587) + (color.blue(#fff) * 114)) / 1000));

	@if math.abs($color-brightness) < calc($light-color / 2) {
		@return $f-color-light;
	} @else {
		@return $f-color-dark;
	}
}

@function contrast-checker($foreground, $background) {
	$r: (max(color.red($foreground), color.red($background))) - (min(color.red($foreground), color.red($background)));
	$g: (max(color.green($foreground), color.green($background))) - (min(color.green($foreground), color.green($background)));
	$b: (max(color.blue($foreground), color.blue($background))) - (min(color.blue($foreground), color.blue($background)));
	$sum-rgb: $r + $g + $b;

	@if $sum-rgb < 500 {
		@return false;
	} @else {
		@return true;
	}
}

@function fix-contrast($text-color, $background: #ffffff){
	@if (luma($background) > 0.5){
		@while(contrast-checker($text-color, $background) == false) {
			$text-color: color.adjust($text-color, $lighten: -1%);

			@if (contrast-checker($text-color, $background)) {
				@return $text-color;
			}
		}
	} @else{
		@while(contrast-checker($text-color, $background) == false) {
			$text-color: color.adjust($text-color, $lighten: 1%);

			@if (contrast-checker($text-color, $background)) {
				@return $text-color;
			}
		}
	}

	  @return $text-color;
}
